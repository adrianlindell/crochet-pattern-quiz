[{"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/index.js":"1","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/App.js":"2","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/reportWebVitals.js":"3","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Form.js":"4","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Answer.js":"5","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Logout.js":"6","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Login.js":"7","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/utils/refreshToken.js":"8","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Question.js":"9","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Navigation.jsx":"10","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/firebase.js":"11","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Quiz.jsx":"12","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/MyPatterns.jsx":"13","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Pattern.js":"14","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Browse.jsx":"15"},{"size":756,"mtime":1614474458391,"results":"16","hashOfConfig":"17"},{"size":2761,"mtime":1614579286493,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1611000584272,"results":"19","hashOfConfig":"17"},{"size":7101,"mtime":1614838820054,"results":"20","hashOfConfig":"17"},{"size":513,"mtime":1614553943234,"results":"21","hashOfConfig":"17"},{"size":552,"mtime":1614666334919,"results":"22","hashOfConfig":"17"},{"size":870,"mtime":1614666330920,"results":"23","hashOfConfig":"17"},{"size":661,"mtime":1611890791798,"results":"24","hashOfConfig":"17"},{"size":662,"mtime":1614579143544,"results":"25","hashOfConfig":"17"},{"size":1613,"mtime":1614583733116,"results":"26","hashOfConfig":"17"},{"size":728,"mtime":1614585854062,"results":"27","hashOfConfig":"17"},{"size":1055,"mtime":1614585280086,"results":"28","hashOfConfig":"17"},{"size":2347,"mtime":1614838967914,"results":"29","hashOfConfig":"17"},{"size":1721,"mtime":1614585343975,"results":"30","hashOfConfig":"17"},{"size":535,"mtime":1614579536088,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"x28miw",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/index.js",[],["70","71"],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/App.js",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/reportWebVitals.js",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Form.js",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Answer.js",["72"],"import React, { useState } from \"react\";\n\nfunction Answer(props) {\n  return(\n    <div role=\"button\" class=\"answer-clickable\" onClick={() => props.onClick(props.bucket, props.questionID)}>\n      <div class=\"answer-image\">\n        <img alt={props.caption} src={props.imgsrc} />\n      </div>\n      <div class=\"image-text\">\n        <div class=\"image-caption\">{props.caption}</div>\n        <div class=\"image-credit\">Photo by {props.photographer} on Unsplash</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Answer;",["73","74"],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Logout.js",["75"],"import React, { useState } from 'react';\nimport { GoogleLogout } from 'react-google-login';\n\nconst clientId = process.env.REACT_APP_FIREBASE_CLIENTID\n\nfunction Logout(props) {\n\n  const onSuccess = () => {\n    console.log('Logout made successfully');\n    alert('Logout made successfully âœŒ');\n    props.setLoggedIn(false);\n    props.setGoogleObj();\n  };\n\n  return (\n    <div>\n      <GoogleLogout\n        clientId={clientId}\n        buttonText=\"Logout\"\n        onLogoutSuccess={onSuccess}\n      ></GoogleLogout>\n    </div>\n  );\n}\n\nexport default Logout;","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Login.js",["76"]," \nimport React, { useState } from 'react'\n\nimport { GoogleLogin } from 'react-google-login';\n// refresh token\nimport { refreshTokenSetup } from '../utils/refreshToken';\n\nconst clientId = process.env.REACT_APP_FIREBASE_CLIENTID\n\nfunction Login(props) {\n\n  const onSuccess = (res) => {\n    console.log('Login Success: currentUser:', res.profileObj);\n    refreshTokenSetup(res);\n    props.setLoggedIn(true);\n    props.setGoogleObj(res.profileObj);\n  };\n\n  const onFailure = (res) => {\n    console.log('Login failed: res:', res);\n    alert(\n      `Failed to login. Please try again`\n    );\n  };\n\n  \n  return (\n\n    <div>\n      <GoogleLogin\n        clientId={clientId}\n        buttonText=\"Login\"\n        onSuccess={onSuccess}\n        onFailure={onFailure}\n        cookiePolicy={'single_host_origin'}\n        isSignedIn={true}\n      />\n    </div>\n  );\n}\n\nexport default Login;","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/utils/refreshToken.js",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Question.js",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Navigation.jsx",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/firebase.js",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Quiz.jsx",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/MyPatterns.jsx",["77"],"import React, { useState, useEffect } from \"react\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Pattern from \"./Pattern\"\nimport database from '../firebase';\nimport { Link } from \"react-router-dom\";\n\nfunction MyPatterns(props) {\n    const [patterns, setPatterns] = useState([])\n\n    useEffect(() => {\n      if (props.googleObj) {\n        database.ref(`/users/${props.googleObj.googleId}/patterns`).on(\"value\", (snapshot) => {\n              if (snapshot) {\n                  console.log(snapshot.val());\n                  let myPatterns = [];\n                  snapshot.forEach( data => {\n                      let pattern = {\n                          id: data.key,\n                          result: data.val().result,\n                          imgsrc: data.val().imgsrc,\n                          photographer: data.val().photographer,\n                          url: data.val().url\n                      }\n                      myPatterns.push(pattern) \n                  });\n                  setPatterns(patterns.concat(myPatterns));\n              }\n          })\n        }\n    }, [])\n\n    function handleClick() {\n      //deletes all saved patterns\n      confirmAlert({\n        title: 'Confirm to delete all',\n        message: 'Are you sure you want to delete all saved patterns?',\n        buttons: [\n          {\n            label: 'Yes',\n            onClick: () => database.ref(`/users/${props.googleObj.googleId}/patterns`).remove()\n          },\n          {\n            label: 'No',\n          }\n        ]\n      });\n    }\n\n    return(\n      <div className=\"display-patterns\">\n        {patterns.length > 0 ?\n          <div>\n            <div className=\"display-grid\">\n              {patterns.map(pattern =>\n                  <Pattern id={pattern.id} googleObj={props.googleObj} result={pattern.result} imgsrc={pattern.imgsrc} photographer={pattern.photographer} url={pattern.url}/>\n              )}\n            </div>\n              <button onClick={() => handleClick()}>Delete all saved patterns</button>\n          </div>\n          :(props.googleObj ? <p>You have no patterns saved.</p> : <p>Please log in to view saved patterns.</p>)}\n        <Link class=\"nav-link\" to=\"/browse\">\n          View all patterns\n        </Link>\n      </div>\n    )\n}\n\nexport default MyPatterns;","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Pattern.js",["78"],"import React, { useState } from \"react\";\nimport database from '../firebase'\n\nfunction Pattern(props) {\n  const saveToDatabase = async (e) => {\n    if (props.isResult) e.preventDefault();\n    if (props.googleObj) {\n      var currentRef = database.ref(`/users/${props.googleObj.googleId}/patterns`).orderByChild(\"result\").equalTo(props.result);\n      \n      //wait for snapshot\n      var snapshot = await currentRef.once('value');\n      \n      //if snapshot exists, alert saying you can't add\n      if(snapshot.exists()) {\n        alert(\"This pattern has already been saved.\");\n      } else {\n        //if snapshot doesn't exist, push to database\n        database.ref(`/users/${props.googleObj.googleId}/patterns`).push(\n          {\n            result: props.result,\n            url: props.url,\n            imgsrc: props.imgsrc,\n            photographer: props.photographer\n          }\n        );\n      }\n    } else {\n    alert(\"Please log in first.\")\n    }\n  }\n\n  const deleteFromDatabase = (e) => {\n    if (props.isResult) e.preventDefault();\n    database.ref(`/users/${props.googleObj.googleId}/patterns/${props.id}`).remove();\n  }\n\n  return (\n    <div class=\"pattern\">\n      <img alt={props.result} src={props.imgsrc} />\n      <div class=\"image-caption\">{props.result}</div>\n      <div class=\"image-credit\">Photo by {props.photographer}</div>\n      <a href={props.url} rel=\"noopener noreferrer\" target=\"_blank\">View Pattern</a>\n      {props.googleObj ?\n        (props.id ?\n          <button onClick={(e) => deleteFromDatabase(e)}>Delete</button>\n          :\n          <button onClick={(e) => saveToDatabase(e)}>Save</button>)\n      :<p>Please log in to save this pattern.</p>}\n    </div>\n  );\n}\n\nexport default Pattern;","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Browse.jsx",["79","80"],"import React, { useState, useEffect} from \"react\"\nimport Pattern from \"./Pattern\"\n\nfunction Browse(props) {\n  const displayAll = props.RESULTS_DATA.map( pattern =>\n    <Pattern\n      googleObj={props.googleObj}\n      result={pattern.result}\n      imgsrc={pattern.imgsrc}\n      photographer={pattern.photographer}\n      url={pattern.url}\n      isResult={false}\n    />\n  );\n\n  return (\n    <div className=\"display-patterns\">\n      <div className=\"display-grid\">\n        {displayAll}\n      </div>\n    </div>\n  );\n}\n\nexport default Browse;",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"81","replacedBy":"89"},{"ruleId":"83","replacedBy":"90"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":2,"column":17,"nodeType":"87","messageId":"88","endLine":2,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":31,"column":8,"nodeType":"93","endLine":31,"endColumn":10,"suggestions":"94"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"95","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["96"],["97"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'patterns' and 'props.googleObj'. Either include them or remove the dependency array. You can also do a functional update 'setPatterns(p => ...)' if you only need 'patterns' in the 'setPatterns' call.","ArrayExpression",["98"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [patterns, props.googleObj]",{"range":"101","text":"102"},[1155,1157],"[patterns, props.googleObj]"]