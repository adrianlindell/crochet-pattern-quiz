[{"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/index.js":"1","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/App.js":"2","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/reportWebVitals.js":"3","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Form.js":"4","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Answer.js":"5","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Logout.js":"6","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Login.js":"7","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/utils/refreshToken.js":"8","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Question.js":"9"},{"size":500,"mtime":1611000584271,"results":"10","hashOfConfig":"11"},{"size":1117,"mtime":1612323651954,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611000584272,"results":"13","hashOfConfig":"11"},{"size":5587,"mtime":1612322496686,"results":"14","hashOfConfig":"11"},{"size":516,"mtime":1612321055908,"results":"15","hashOfConfig":"11"},{"size":585,"mtime":1611891355916,"results":"16","hashOfConfig":"11"},{"size":1060,"mtime":1611891181580,"results":"17","hashOfConfig":"11"},{"size":661,"mtime":1611890791798,"results":"18","hashOfConfig":"11"},{"size":760,"mtime":1611983789084,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ta1js0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/index.js",[],["43","44"],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/App.js",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/reportWebVitals.js",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Form.js",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Answer.js",["45"],"import React, { useState } from \"react\";\n\nfunction Answer(props) {\n  return(\n    <li role=\"button\" class=\"answer-clickable\" onClick={() => props.onClick(props.bucket)}>\n      <div class=\"answer-image\">\n        <img alt={props.caption} src={props.imgsrc} />\n      </div>\n      <div class=\"image-caption\">{props.caption}</div>\n      {/*LINK TO PHOTOGRAPHER {props.photographer} AND UNSPLASH.COM*/}\n      <div class=\"image-credit\">Photo by {props.photographer} on Unsplash</div>\n    </li>\n  );\n}\n\nexport default Answer;","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Logout.js",["46"],"import React, { useState } from 'react';\nimport { GoogleLogout } from 'react-google-login';\n\nconst clientId = '848023384184-eravrd6hcmavjg1bdmcpvcl7q7t7v0ns.apps.googleusercontent.com' //insert client id here\n\nfunction Logout(props) {\n\n  const onSuccess = () => {\n    console.log('Logout made successfully');\n    alert('Logout made successfully ✌');\n    props.setLoggedIn(false);\n  };\n\n  return (\n    <div>\n      <GoogleLogout\n        clientId={clientId}\n        buttonText=\"Logout\"\n        onLogoutSuccess={onSuccess}\n      ></GoogleLogout>\n    </div>\n  );\n}\n\nexport default Logout;","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Login.js",["47"]," \nimport React, { useState } from 'react'\n\nimport { GoogleLogin } from 'react-google-login';\n// refresh token\nimport { refreshTokenSetup } from '../utils/refreshToken';\n\nconst clientId = '848023384184-eravrd6hcmavjg1bdmcpvcl7q7t7v0ns.apps.googleusercontent.com' //insert client id here\n\nfunction Login(props) {\n\n  const onSuccess = (res) => {\n    console.log('Login Success: currentUser:', res.profileObj);\n    alert(\n      `Logged in successfully! Welcome ${res.profileObj.name} 😍. \\n See console for full profile object.`\n    );\n    refreshTokenSetup(res);\n    props.setLoggedIn(true);\n    props.setName(res.profileObj.name)\n  };\n\n  const onFailure = (res) => {\n    console.log('Login failed: res:', res);\n    alert(\n      `Failed to login 😢. Please try again`\n    );\n  };\n\n  \n  return (\n\n    <div>\n      <GoogleLogin\n        clientId={clientId}\n        buttonText=\"Login\"\n        onSuccess={onSuccess}\n        onFailure={onFailure}\n        cookiePolicy={'single_host_origin'}\n        isSignedIn={true}\n      />\n    </div>\n  );\n}\n\nexport default Login;","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/utils/refreshToken.js",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Question.js",["48"],"import React from \"react\";\nimport Answer from \"./Answer\";\n\nfunction Question(props) {\n\n  const answerElements = props.answers.map(answer => (\n    <Answer\n      imgsrc={answer.imgsrc}\n      caption={answer.caption}\n      photographer={answer.photographer}\n      imgcredit={answer.imgcredit}\n      bucket={answer.bucket}\n      onClick={props.onClick}\n    />\n  ));\n  {/*\n    when an answer is clicked, add a point to the corresponding bucket\n    Answer element will report its id to Question and then Form\n    Form will handle all total buckets\n  */}\n\n  return (\n    <fieldset id={props.id}>\n      <legend>{props.legend}</legend>\n      <ul role=\"radiogroup\" class=\"answer-tile\">\n        {answerElements}\n      </ul>\n    </fieldset>\n  )\n}\n\nexport default Question;",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"54","line":2,"column":17,"nodeType":"55","messageId":"56","endLine":2,"endColumn":25},{"ruleId":"57","severity":1,"message":"58","line":16,"column":3,"nodeType":"59","messageId":"60","endLine":20,"endColumn":6},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]