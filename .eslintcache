[{"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/index.js":"1","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/App.js":"2","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/reportWebVitals.js":"3","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Form.js":"4","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Answer.js":"5","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Logout.js":"6","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Login.js":"7","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/utils/refreshToken.js":"8","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Question.js":"9","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Navigation.jsx":"10","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/firebase.js":"11","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Quiz.jsx":"12","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/MyPatterns.jsx":"13","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Pattern.js":"14","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Browse.jsx":"15"},{"size":756,"mtime":1614474458391,"results":"16","hashOfConfig":"17"},{"size":2761,"mtime":1614579286493,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1611000584272,"results":"19","hashOfConfig":"17"},{"size":7156,"mtime":1614584912859,"results":"20","hashOfConfig":"17"},{"size":513,"mtime":1614553943234,"results":"21","hashOfConfig":"17"},{"size":552,"mtime":1614666334919,"results":"22","hashOfConfig":"17"},{"size":870,"mtime":1614666330920,"results":"23","hashOfConfig":"17"},{"size":661,"mtime":1611890791798,"results":"24","hashOfConfig":"17"},{"size":662,"mtime":1614579143544,"results":"25","hashOfConfig":"17"},{"size":1613,"mtime":1614583733116,"results":"26","hashOfConfig":"17"},{"size":728,"mtime":1614585854062,"results":"27","hashOfConfig":"17"},{"size":1055,"mtime":1614585280086,"results":"28","hashOfConfig":"17"},{"size":2309,"mtime":1614660217825,"results":"29","hashOfConfig":"17"},{"size":1721,"mtime":1614585343975,"results":"30","hashOfConfig":"17"},{"size":535,"mtime":1614579536088,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"x28miw",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/index.js",[],["69","70"],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/App.js",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/reportWebVitals.js",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Form.js",["71","72","73"],"import React, { useState } from \"react\"\nimport Question from \"./Question\"\nimport Pattern from \"./Pattern\"\nimport Login from \"./Login\"\nimport Logout from \"./Logout\"\nimport database from '../firebase'\n\nfunction Form(props) {\n  const ANSWER_DATA = [\n    [\n      { imgsrc: \"https://images.unsplash.com/photo-1577398577097-0ef7f248f0a5?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=975&q=80\", caption: \"Neon green\", photographer: \"Thibault Milan\", bucket: 0, questionID: \"0\" },\n      { imgsrc: \"https://images.unsplash.com/photo-1549575021-6a05b45de57a?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1340&q=80\", caption: \"Mauve\", photographer: \"Deleece Cook\", bucket: 1, questionID: \"0\" },\n      { imgsrc: \"https://images.unsplash.com/photo-1568228945912-ec2673a7fef8?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1867&q=80\", caption: \"Sea green\", photographer: \"Chris Bayer\", bucket: 2, questionID: \"0\" },\n      { imgsrc: \"https://images.unsplash.com/photo-1541724673942-6b2993cf1c81?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80\", caption: \"Coral\", photographer: \"Rebecca Matthews\", bucket: 3, questionID: \"0\" },\n    ],\n    [\n      { imgsrc: \"https://images.unsplash.com/photo-1453904061941-02ada96e1f4a?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1910&q=80\", caption: \"Oval\", photographer: \"Andy White\", bucket: 2, questionID: \"1\" },\n      { imgsrc: \"https://images.unsplash.com/photo-1530005650741-08aa02c24ff8?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=935&q=80\", caption: \"Rectangular prism\", photographer: \"Andreas Dress\", bucket: 0, questionID: \"1\" },\n      { imgsrc: \"https://images.unsplash.com/photo-1517867065801-e20f409696b0?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1951&q=80\", caption: \"Heart\", photographer: \"freestocks\", bucket: 1, questionID: \"1\" },\n      { imgsrc: \"https://images.unsplash.com/photo-1487552292919-eccbbd948cba?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80\", caption: \"Rhombus\", photographer: \"Ben Neale\", bucket: 3, questionID: \"1\" },\n    ],\n    [\n      { imgsrc: \"https://images.unsplash.com/photo-1569219872862-58f96b8f1d65?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTh8fG51bWJlciUyMHRocmVlfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=900&q=60\", caption: \"3\", photographer: \"max fuchs\", bucket: 3, questionID: \"2\" },\n      { imgsrc: \"https://images.unsplash.com/photo-1595480603720-7ab5aa097a34?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80\", caption: \"64\", photographer: \"Markus Spiske\", bucket: 1, questionID: \"2\" },\n      { imgsrc: \"https://images.unsplash.com/photo-1595871263997-a1358d25d7ad?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\", caption: \"8\", photographer: \"samuel gembe\", bucket: 2, questionID: \"2\" },\n      { imgsrc: \"https://images.unsplash.com/photo-1590436371576-488a4891b4b8?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1951&q=80\", caption: \"37\", photographer: \"Scott Evans\", bucket: 0, questionID: \"2\" },\n    ],\n    [\n      { imgsrc: \"https://images.unsplash.com/photo-1522043436628-a4bd7867030b?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1001&q=80\", caption: \"Winter\", photographer: \"Justin Kauffman\", bucket: 1, questionID: \"3\" },\n      { imgsrc: \"https://images.unsplash.com/photo-1559150182-a7144f7628f9?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=934&q=80\", caption: \"Spring\", photographer: \"Yoksel Zok\", bucket: 3, questionID: \"3\" },\n      { imgsrc: \"https://images.unsplash.com/photo-1473496169904-658ba7c44d8a?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1950&q=80\", caption: \"Summer\", photographer: \"Ethan Robertson\", bucket: 0, questionID: \"3\" },\n      { imgsrc: \"https://images.unsplash.com/photo-1477088139840-0f0a9cb47cce?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1400&q=80\", caption: \"Fall\", photographer: \"Courtney Read\", bucket: 2, questionID: \"3\" },\n    ],\n  ];\n\n  const QUESTION_DATA = [\n    { isDisabled: true, id: \"0\", legend: \"What's your favorite color?\", answers: ANSWER_DATA[0] },\n    { isDisabled: true, id: \"1\", legend: \"Which shape is objectively the best?\", answers: ANSWER_DATA[1] },\n    { isDisabled: true, id: \"2\", legend: \"Which number speaks to you?\", answers: ANSWER_DATA[2] },\n    { isDisabled: true, id: \"3\", legend: \"What is the best season?\", answers: ANSWER_DATA[3] },\n  ];\n\n  const [bucketTotal, setBucketTotal] = useState([0,0,0,0]);\n\n  function handleClick(result, questionID) {\n    if(!document.getElementById(questionID).disabled) {\n      const buckets = bucketTotal.slice();\n      buckets[result]++;\n      setBucketTotal(buckets);\n      document.getElementById(questionID).disabled = true;\n      document.getElementById(questionID).style.backgroundColor = \"#B8F2E6\";\n      document.getElementById((parseInt(questionID) + 1).toString()).scrollIntoView({ behavior: \"smooth\"});\n    }\n  }\n\n  function displayResults() {\n    const largest = bucketTotal.indexOf(Math.max(...bucketTotal));\n    const thisResult = props.RESULTS_DATA[largest];\n\n    return (\n      <div>\n        <p style={{fontSize: \"2.5rem\"}} >You got... {thisResult.result}!</p>\n        <Pattern\n          googleObj={props.googleObj}\n          result={thisResult.result}\n          imgsrc={thisResult.imgsrc}\n          photographer={thisResult.photographer}\n          url={thisResult.url}\n          isResult={true}\n        />\n        <a href=\"https://coderssb-project-w21.firebaseapp.com/browse\" style={{display: \"inline-block\", marginTop: \"15px\"}}>View all patterns</a>\n      </div>\n    );\n  }\n\n  const questionList = QUESTION_DATA.map( question => (\n      <div class=\"question\">\n        <Question\n          id={question.id}\n          legend={question.legend}\n          answers={question.answers}\n          onClick={handleClick}\n        />\n      </div>\n  ));\n\n  const renderResults = (bucketTotal.reduce(function(a, b){ return a + b; }, 0) < QUESTION_DATA.length) ? <div class=\"results\" >Please select an answer for each question.</div> : displayResults();\n\n  function resetQuiz() {\n    //reset buckets\n    setBucketTotal([0,0,0,0]);\n    //set answers to be unclicked and clickable\n    for (var i = 0; i < 4; i++) {\n      document.getElementById(i).disabled = false;\n      document.getElementById(i).style.backgroundColor = \"#FFA69E\";\n    }\n    document.getElementById(0).scrollIntoView({ behavior: \"smooth\"});\n  }\n\n  return (\n    <form className=\"quiz\">\n      {questionList}\n      <div className=\"results\" id={bucketTotal.length} >\n        {renderResults}\n        <button type=\"reset\" onClick={() => resetQuiz()}>Reset quiz</button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Answer.js",["74"],"import React, { useState } from \"react\";\n\nfunction Answer(props) {\n  return(\n    <div role=\"button\" class=\"answer-clickable\" onClick={() => props.onClick(props.bucket, props.questionID)}>\n      <div class=\"answer-image\">\n        <img alt={props.caption} src={props.imgsrc} />\n      </div>\n      <div class=\"image-text\">\n        <div class=\"image-caption\">{props.caption}</div>\n        <div class=\"image-credit\">Photo by {props.photographer} on Unsplash</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Answer;",["75","76"],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Logout.js",["77"],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Login.js",["78"],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/utils/refreshToken.js",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Question.js",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Navigation.jsx",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/firebase.js",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Quiz.jsx",[],"/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/MyPatterns.jsx",["79"],"import React, { useState, useEffect } from \"react\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Pattern from \"./Pattern\"\nimport database from '../firebase';\n\nfunction MyPatterns(props) {\n    const [patterns, setPatterns] = useState([])\n\n    useEffect(() => {\n      if (props.googleObj) {\n        database.ref(`/users/${props.googleObj.googleId}/patterns`).on(\"value\", (snapshot) => {\n              if (snapshot) {\n                  console.log(snapshot.val());\n                  let myPatterns = [];\n                  snapshot.forEach( data => {\n                      let pattern = {\n                          id: data.key,\n                          result: data.val().result,\n                          imgsrc: data.val().imgsrc,\n                          photographer: data.val().photographer,\n                          url: data.val().url\n                      }\n                      myPatterns.push(pattern) \n                  });\n                  setPatterns(patterns.concat(myPatterns));\n              }\n          })\n        }\n    }, [])\n\n    function handleClick() {\n      //deletes all saved patterns\n      confirmAlert({\n        title: 'Confirm to delete all',\n        message: 'Are you sure you want to delete all saved patterns?',\n        buttons: [\n          {\n            label: 'Yes',\n            onClick: () => database.ref(`/users/${props.googleObj.googleId}/patterns`).remove()\n          },\n          {\n            label: 'No',\n          }\n        ]\n      });\n    }\n\n    return(\n      <div className=\"display-patterns\">\n        {patterns.length > 0 ?\n          <div>\n            <div className=\"display-grid\">\n              {patterns.map(pattern =>\n                  <Pattern id={pattern.id} googleObj={props.googleObj} result={pattern.result} imgsrc={pattern.imgsrc} photographer={pattern.photographer} url={pattern.url}/>\n              )}\n            </div>\n              <button onClick={() => handleClick()}>Delete all saved patterns</button>\n          </div>\n          :(props.googleObj ? <p>You have no patterns saved.</p> : <p>Please log in to view saved patterns.</p>)}\n        <a href=\"https://coderssb-project-w21.firebaseapp.com/browse\">View all patterns</a>\n      </div>\n    )\n}\n\nexport default MyPatterns;","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Pattern.js",["80"],"import React, { useState } from \"react\";\nimport database from '../firebase'\n\nfunction Pattern(props) {\n  const saveToDatabase = async (e) => {\n    if (props.isResult) e.preventDefault();\n    if (props.googleObj) {\n      var currentRef = database.ref(`/users/${props.googleObj.googleId}/patterns`).orderByChild(\"result\").equalTo(props.result);\n      \n      //wait for snapshot\n      var snapshot = await currentRef.once('value');\n      \n      //if snapshot exists, alert saying you can't add\n      if(snapshot.exists()) {\n        alert(\"This pattern has already been saved.\");\n      } else {\n        //if snapshot doesn't exist, push to database\n        database.ref(`/users/${props.googleObj.googleId}/patterns`).push(\n          {\n            result: props.result,\n            url: props.url,\n            imgsrc: props.imgsrc,\n            photographer: props.photographer\n          }\n        );\n      }\n    } else {\n    alert(\"Please log in first.\")\n    }\n  }\n\n  const deleteFromDatabase = (e) => {\n    if (props.isResult) e.preventDefault();\n    database.ref(`/users/${props.googleObj.googleId}/patterns/${props.id}`).remove();\n  }\n\n  return (\n    <div class=\"pattern\">\n      <img alt={props.result} src={props.imgsrc} />\n      <div class=\"image-caption\">{props.result}</div>\n      <div class=\"image-credit\">Photo by {props.photographer}</div>\n      <a href={props.url} rel=\"noopener noreferrer\" target=\"_blank\">View Pattern</a>\n      {props.googleObj ?\n        (props.id ?\n          <button onClick={(e) => deleteFromDatabase(e)}>Delete</button>\n          :\n          <button onClick={(e) => saveToDatabase(e)}>Save</button>)\n      :<p>Please log in to save this pattern.</p>}\n    </div>\n  );\n}\n\nexport default Pattern;","/Users/adrian/Desktop/projects/crochet-pattern-quiz/my-app/src/components/Browse.jsx",["81","82"],"import React, { useState, useEffect} from \"react\"\nimport Pattern from \"./Pattern\"\n\nfunction Browse(props) {\n  const displayAll = props.RESULTS_DATA.map( pattern =>\n    <Pattern\n      googleObj={props.googleObj}\n      result={pattern.result}\n      imgsrc={pattern.imgsrc}\n      photographer={pattern.photographer}\n      url={pattern.url}\n      isResult={false}\n    />\n  );\n\n  return (\n    <div className=\"display-patterns\">\n      <div className=\"display-grid\">\n        {displayAll}\n      </div>\n    </div>\n  );\n}\n\nexport default Browse;",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":13},{"ruleId":"87","severity":1,"message":"91","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":14},{"ruleId":"87","severity":1,"message":"92","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":16},{"ruleId":"87","severity":1,"message":"93","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"83","replacedBy":"94"},{"ruleId":"85","replacedBy":"95"},{"ruleId":"87","severity":1,"message":"93","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"93","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":25},{"ruleId":"96","severity":1,"message":"97","line":30,"column":8,"nodeType":"98","endLine":30,"endColumn":10,"suggestions":"99"},{"ruleId":"87","severity":1,"message":"93","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"93","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"100","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Logout' is defined but never used.","'database' is defined but never used.","'useState' is defined but never used.",["101"],["102"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'patterns' and 'props.googleObj'. Either include them or remove the dependency array. You can also do a functional update 'setPatterns(p => ...)' if you only need 'patterns' in the 'setPatterns' call.","ArrayExpression",["103"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [patterns, props.googleObj]",{"range":"106","text":"107"},[1114,1116],"[patterns, props.googleObj]"]